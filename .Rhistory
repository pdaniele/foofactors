library(devtools)
load_all()
install.packages("roxygen2")
load_all()
load_all()
chr_factor(c('BumbleBees', 'Bees', 'Bears'))
check()
library("roxygen2", lib.loc="~/R/win-library/3.1")
document()
test_that()
use_testthat()
install.packages("testthat")
use_testthat()
chr_factor(factor('BumbleBees', 'Bees', 'Bears'))
load_all()
chr_factor(factor('BumbleBees', 'Bees', 'Bears'))
document()
z <- factor(1,2,2,3)
install.packages("Rtools")
?desc
install.packages("dplyr")
install.packages("tidyverse")
library("tidyverse", lib.loc="~/R/R-3.3.1/library")
install.packages("devtol")
install.packages("devtools")
install.packages("tidyverse")
install.packages("survival")
library("devtools", lib.loc="~/R/win-library/3.3")
library(testthat)
install.packages("testthat")
library(testthat)
library("devtools", lib.loc="~/R/win-library/3.3")
load_all()
test()
test()
devtools::load_all(".")
check()
use_package('dplyr')
factor('BumbleBees', 'Bees', 'Bears')
x<-factor('BumbleBees', 'Bees', 'Bears')
x<-factor(c('BumbleBees', 'Bees', 'Bears'))
x <- factor(c('Brown', 'Bears', 'Bite', 'Bananas')) ## Should be True
y <- factor(c('Apple', 'Orange', 'Apple', 'Orange')) ## Should be False
z <- factor(c(1,2,2,3))
expect_true(chr_factor(x))
chr_factor(x)
chr_factor(y)
chr_factor(z)
a <- factor(c(1,1,1,1))
chr_factor(a)
desc(x)
?desc
library("dplyr", lib.loc="~/R/win-library/3.3")
?desc
x <- c(1,1,1,1)
length(x)
b <- factor(c(1,2,3,4)) ## Should be True
chr_factor(b)
factor(c('BumbleBees', 'Bees', 'Bears', 'Creates', 'Capital', 'For','Unicorns')
factor(c('BumbleBees', 'Bees', 'Bears', 'Creates', 'Capital', 'For','Unicorns'))
factor(c('BumbleBees', 'Bees', 'Bears', 'Creates', 'Capital', 'For','Unicorns'))
x <-factor(c('BumbleBees', 'Bees', 'Bears', 'Creates', 'Capital', 'For','Unicorns'))
reorder(desc(x))
?reorder
reorder(x, desc(x))
load_all()
reorder_desc(factor(c('Brown', 'Bears', 'Bite', 'Bananas')))
x2 <- reoder_desc(x)
x <- factor(c('a', 'b', 'c', 'd'))
y <- factor(c('b', 'c', 'a', 'd'))
z <- factor(c('d', 'c', 'b', 'a'))
x2 <- reorder_desc(x)
y2 <- reorder_desc(y)
x2 == y2
x2
y2
all.equal(x2,y2)
z
load_all()
x2 <- reorder_desc(x)
x2
str(x2)
reorder(x, desc(x))
reorder(x, desc(x), order=F)
reorder(x, desc(x), order=T)
desc(x)
?desc
desc(factor(letters))
x2
x2$levels
str(x2)
factor(c('d','c','b','a'))
a<- factor(c('d','c','b','a'))
str(a)
str(x2$)
x2
x2[1]
x2[2]
x2[1:4]
levels(x2)
levels(x2) == levels(y2)
z
x2 <- reorder_desc(x)
y2 <- reorder_desc(y)
z2 <- reorder_desc(z)
z2 == x2
y2 == x2
levels(x2) ==levels(y2)
levels(x2) == levels(z2)
levels(y2) == levels(z2)
document()
mtcars
mtcars$cyl
factor(mtcars$cyl)
factor(mtcars$cyl)
factor(mtcars$cyl)
as.is(mtcars$cyl)
unique(mtcars$cyl)
factor(unique(mtcars$cyl))
factor(mtcars$cyl)
levels = unique(mtcars$cyl)
levels
levels = unique(factor(mtcars$cyl))
levels
reorder(factor(mtcars$cyl), unique(mtcars$cyl))
levels = unique(factor(mtcars$cyl))
levels
factor(mtcars$cyl)
factor(mtcars$cyl, levels=unique(mtcar$cyl))
factor(mtcars$cyl, levels=unique(mtcars$cyl))
document()
load_all()
order_asis(mycars$cyl)
order_asis(mtcars$cyl)
x <- factor(c('a', 'b', 'c', 'd'))
y <- factor(c('b', 'c', 'a', 'd'))
z <- factor(c('d', 'c', 'b', 'a'))
x2 <- order_asis(x)
y2 <- order_asis(y)
z2 <- order_asis(z)
x2
levels(x2)
z
levels(z2)
z
z_c
z_c <- c('d', 'c', 'b', 'a')
z_c
levels(z2) == z_c
x <- factor(c('a', 'b', 'c', 'd'))
y <- factor(c('b', 'c', 'a', 'd'))
z <- factor(c('d', 'c', 'b', 'a'))
x_c <- c('a', 'b', 'c', 'd')
y_c <- c('b', 'c', 'a', 'd')
z_c <- c('d', 'c', 'b', 'a')
x2 <- order_asis(x)
y2 <- order_asis(y)
z2 <- order_asis(z)
levels(z2) == z_c
levels(y2) == y_c
levels(x2) == x_c
factor(mtcars$cyl)
order_asis(mtcars$cyl)
cars
cars <- order_asis(mtcars$cyl)
cars2 <- order_asis(mtcars$cyl)
levels(cars2)
build_vignettes()
build_vignettes('foofactors')
is.vector(mtcars$cyl)
is.vector(c('a','b','c','d'))
load_all()
order_asis('a')
chr_factor(TRUE)
load_all()
chr_factor(1)
chr_factor(mtcars)
order_asis(mtcars)
reorder_desc(mtcars)
use_vignette()
build_vignettes()
use_vignette("hello-foofactors")
build_vignettes()
browseVignettes("foofactors")
check()
load_all()
check()
library(foofactors)
check()
